---
interface Props {
  title: string;
  description: string;
  image: string;
  category: string;
  rating: number;
  url: string;
  price?: string;
}

const { title, description, image, category, rating, url, price = "Free" } = Astro.props;

// Generate stars based on rating
const fullStars = Math.floor(rating);
const hasHalfStar = rating % 1 >= 0.5;
const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
---

<div class="group relative overflow-hidden rounded-lg border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900 shadow-sm hover:shadow-md transition-all duration-300">
  <a href={url} class="absolute inset-0 z-10"></a>
  <div class="relative aspect-video overflow-hidden">
    <img src={image} alt={title} class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105" />
    <div class="absolute top-2 right-2 bg-secondary-600 text-white text-xs font-medium px-2 py-1 rounded-full">
      {category}
    </div>
  </div>
  <div class="p-4">
    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">{title}</h3>
    <div class="mt-1 flex items-center">
      <div class="flex text-amber-400">
        {Array(fullStars).fill(null).map(() => (
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
        ))}
        {hasHalfStar && (
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
        )}
        {Array(emptyStars).fill(null).map(() => (
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="none" stroke="currentColor">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
        ))}
      </div>
      <span class="ml-1 text-sm text-gray-600 dark:text-gray-400">{rating.toFixed(1)}</span>
    </div>
    <p class="mt-2 text-sm text-gray-600 dark:text-gray-400 line-clamp-2">{description}</p>
    <div class="mt-4 flex items-center justify-between">
      <span class="text-sm font-medium text-gray-900 dark:text-white">{price}</span>
      <span class="text-xs text-primary-600 font-medium group-hover:underline">Learn more &rarr;</span>
    </div>
  </div>
</div>
